<!DOCTYPE html>
<html>
<head>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"> </script>

</head>

<body>

<h1>Statement Sender</h1>


<script type="text/javascript">

function sendXAPIStatement(statement, settings){
	console.log("sending Request...");

	// If no other data was submitted, generate a default statement to send.
	if(statement === undefined)
		// A statement is a simple JSON object with an actor, verb and object following the xAPI
		// specification. Additional field such as a timestamp can be added.
		statement =
			{
				"actor" : 
					{
						"mbox" : "mailto:" + "example.user@example.com" ,
						"name" : "Example User VM"
					},
				"verb" : 
					{
						"id" : "http://example.com/verbs/exampleVerb",
						"display" : {"en-US" : "accessed"}
					},
				"object" : 
					{
						"id" : "http://example.com/activities/exampleActivity",
						"definition" : {"name" : {"en-US" : "exampleActivityName"}}
					}
			};
			
	console.log(JSON.stringify(statement));
	
	gameID = "anotherGameID"
	
	if(settings == undefined){
		settings = {
			"async": true,
			"crossDomain": true,
			"url": "http://cloud18.dbis.rwth-aachen.de/data/xAPI/statements",
			"method": "POST",
			"headers": {
				"X-Experience-API-Version": "1.0.1",
				"Content-Type": "application/json",
				"Authorization": "Basic MWJkMDM4Mjk3YjkwY2NhODc3NTQ4NjVlMDBlMGJjZTJmNTg4ZmNmMTozNmM3MmMzM2EwYzBkYWViMjNkNzA3NGU3MGZkNjUwYmFjMTkzYTlj",
				"Cache-Control": "no-cache",
			},
			"processData": false,
			"data" : JSON.stringify(statement)
		};
	}

	$.ajax(settings).done(function (response) {
	  console.log(response);
	});

}

function sendNRandomStatements(n){
	settings = {
		"async": true,
		"crossDomain": true,
		"url": "http://cloud18.dbis.rwth-aachen.de/data/xAPI/statements",
		"method": "POST",
		"headers": {
			"X-Experience-API-Version": "1.0.3",
			"Content-Type": "application/json",
			"Authorization": "Basic NTRmNWE1NDNlNzViMjZkMDNjZWRiOTkyZGQ5OTMyYjE2NzhlYjA1MTplZjY0MmY1YTcxN2Q2MWE4YzU1MDJkYTZmODFlN2FkZjZjMTY0ZWVm",
			"Cache-Control": "no-cache",
		},
		"processData": false,
		"data" : ""
	};

	for(i=0; i<n; i++){
		var year = Math.floor((Math.random()*15) + 2002);
		var month = Math.floor(Math.random()*12);
		var day = Math.floor(Math.random()*29);
		var hour = Math.floor(Math.random()*24);
		var date = new Date(year, month, day, hour);
		
		var isodate = date.toISOString();
		
		newStatement =
			{
				"actor" : 
					{
						"mbox" : "mailto:" + "max.mustermann@example.com" ,
						"name" : "Max Mustermann"
					},
				"verb" : 
					{
						"id" : "http://example.com/verbs/exampleVerb",
						"display" : {"en-US" : "accessed"}
					},
				"object" : 
					{
						"id" : "http://example.com/activities/exampleActivity",
						"definition" : {"name" : {"en-US" : "exampleActivity"}}
					},
				"timestamp" : isodate
			};
		settings.data = JSON.stringify(newStatement);
		sendXAPIStatement(newStatement, settings);
	}
}

function sendWeirdData(){
	settings = {
		"async": true,
		"crossDomain": true,
		"url": "http://cloud18.dbis.rwth-aachen.de/data/xAPI/statements",
		"method": "POST",
		"headers": {
			"X-Experience-API-Version": "1.0.3",
			"Content-Type": "application/json",
			"Authorization": "Basic NTRmNWE1NDNlNzViMjZkMDNjZWRiOTkyZGQ5OTMyYjE2NzhlYjA1MTplZjY0MmY1YTcxN2Q2MWE4YzU1MDJkYTZmODFlN2FkZjZjMTY0ZWVm",
			"Cache-Control": "no-cache",
		},
		"processData": false,
		"data" : ""
	};

	var values = ["B", "A", "C", "A", "A", "C"];
	
	for(var val in values){
		newStatement =
			{
				"actor" : 
					{
						"mbox" : "mailto:" + "max.mustermann@example.com" ,
						"name" : "Max Mustermann"
					},
				"verb" : 
					{
						"id" : "http://example.com/verbs/exampleVerb",
						"display" : {"en-US" : "accessed"}
					},
				"object" : 
					{
						"id" : "http://example.com/activities/exampleActivity",
						"definition" : {"name" : {"en-US" : "exampleActivity"}}
					},
				"result": {
					"completion": true,
					"success": true,
					"extensions": {
						"http://example.com/customData": val
					}
				}
			};
		settings.data = JSON.stringify(newStatement);
		sendXAPIStatement(newStatement, settings);
	}
}

function sendTestSet(){
    
    var dates = [];
    var dates_iso = [];
    var satements = [];
    var times = [0,0,0,0,1,1,2,3,4,3,3,5,10,15,20,20,30,20,20,19,18,15,13,5];
    
    for (i=0;i<times.length;i++){
        for(j=0;j<times[i];j++){
            dates.push(new Date(2020, 0+Math.floor(j/28), j % 28, i, 0, 0, 0));
        }
    }
    
    for(i=0;i<dates.length;i++){
        dates_iso.push(dates[i].toISOString());
        
        newStatement =
			{
				"actor" : 
					{
						"mbox" : "mailto:" + "max.mustermann@example.com" ,
						"name" : "Max Mustermann"
					},
				"verb" : 
					{
						"id" : "http://example.com/verbs/someEpicVerb",
						"display" : {"en-US" : "accessed"}
					},
				"object" : 
					{
						"id" : "http://example.com/activities/someAmazingObject",
						"definition" : {"name" : {"en-US" : "somethingMagical"}}
					},
				"timestamp" : dates_iso[i],
				"stored" : dates_iso[i]
			};
		console.log(dates_iso[i]);
		sendXAPIStatement(newStatement);
    }
}

// Run the above script to generate an xAPI statement inside LearningLocker.
// uncommenting the following line will cause the html page to immediately add a statement to the 'Gamification Tests' repo
// window.onload = sendXAPIStatement();
// window.onload = sendNRandomStatements(1000);
window.onload = sendWeirdData();
</script>

</body>
</html>
